name: Build and Push Docker Image

on:
    push:
        tags:
            - 'v*'

jobs:
    build:
        runs-on: ubuntu-latest
        env: # Definir variables de entorno a nivel de trabajo
            IMAGE_TAG: '${{ secrets.DOCKERHUB_USERNAME }}/zsh:${GITHUB_REF#refs/tags/}'
            IMAGE_LATEST: '${{ secrets.DOCKERHUB_USERNAME }}/zsh:latest'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Get the tag names
              id: tag
              run: |
                  echo "VERSION_TAG=${GITHUB_REF#refs/tags/}"
                  echo "IMAGE_TAG=${{ secrets.DOCKERHUB_USERNAME }}/zsh:${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
                  echo "IMAGE_LATEST=${{ secrets.DOCKERHUB_USERNAME }}/zsh:latest" >> GITHUB_ENV

            - name: Check if the tag exists on Docker Hub
              run: |
                  TAG_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/zsh/tags/${env.VERSION_TAG}/")
                  if [ "$TAG_EXISTS" -eq 200 ]; then
                      echo "Tag already exists, skipping push"
                      exit 1
                  fi

            - name: Build Docker image
              run: |
                  docker build -t "${{ env.IMAGE_TAG }}" -t ${{ env.IMAGE_LATEST }} .

            - name: Push Docker image
              run: |
                  docker push "${{ env.IMAGE_TAG }}" 
                  docker push "${{ env.IMAGE_LATEST }}"
